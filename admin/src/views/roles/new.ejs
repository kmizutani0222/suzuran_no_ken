  <div class="page-header">
    <h1>ロール登録</h1>
  </div>

  <div class="row">
    <div class="col s12">
      <div class="card">
        <div class="card-content">
          <form action="/roles" method="post" enctype="multipart/form-data">
            <input type="hidden" name="iconReset" id="iconReset" value="false" />
            <div class="row">
              <div class="col s6">
                <div class="input-field">
                  <input type="text" id="name" name="name" required>
                  <label for="name">名前 *</label>
                </div>
                <div class="input-field">
                  <input type="number" id="movementPower" name="movementPower" min="1" max="10">
                  <label for="movementPower">移動力（1-10）（任意）</label>
                </div>
                <div class="input-field">
                  <input type="number" id="jumpHigh" name="jumpHigh" min="1" max="10">
                  <label for="jumpHigh">ジャンプ高（1-10）（任意）</label>
                </div>
                <div class="input-field">
                  <input type="number" id="jumpLow" name="jumpLow" min="1" max="10">
                  <label for="jumpLow">ジャンプ低（1-10）（任意）</label>
                </div>
                <div class="input-field">
                  <select name="terrainSuitability">
                    <option value="">未選択</option>
                    <option value="normal">通常</option>
                  </select>
                  <label>地形適正（任意）</label>
                </div>
              </div>
              <div class="col s6">
                <h6 class="image-section-title">アイコン</h6>
                <div class="image-preview-container">
                  <div id="icon-preview" class="image-preview-large clickable-preview" onclick="selectIcon()">
                    <div class="no-image">
                      <i class="material-icons">image</i>
                      <span>画像が選択されていません</span>
                    </div>
                  </div>
                </div>
                <div class="image-controls">
                  <div class="file-input-wrapper">
                    <input type="file" name="icon" accept="image/*" onchange="imageResizer.handleImageUpload(this, 'icon')" id="icon-file-input" style="display: none;" />
                  </div>
                </div>
              </div>
            </div>

            <div class="row">
              <div class="col s12 text-center">
                <button type="submit" class="btn-large waves-effect waves-light blue">
                  <i class="material-icons left">save</i>登録
                </button>
              </div>
            </div>
          </form>
        </div>
      </div>
    </div>
  </div>
<!-- 固定配置の戻るボタン -->
<a href="/roles" class="btn-floating fab-back waves-effect waves-light grey">
  <i class="material-icons">arrow_back</i>
</a>

<script>
document.addEventListener('DOMContentLoaded', function() {
  // ファイル入力の変更を監視してプレビューを更新
  const fileInput = document.getElementById('icon-file-input');
  if (fileInput) {
    fileInput.addEventListener('change', handleFileChange);
  }
});

// アイコン選択機能
function selectIcon() {
  document.getElementById('icon-file-input').click();
}

// ファイル入力の変更を監視してプレビューを更新し、iconResetフラグをリセット
function handleFileChange(e) {
  if (e.target.files && e.target.files[0]) {
    const file = e.target.files[0];
    const reader = new FileReader();
    reader.onload = function(e) {
      const iconPreview = document.getElementById('icon-preview');
      if (iconPreview) {
        iconPreview.innerHTML = `
          <img src="${e.target.result}" alt="選択されたアイコン" />
          <button type="button" class="remove-icon-btn" onclick="event.stopPropagation(); resetIcon()">
            <i class="material-icons">close</i>
          </button>
        `;
        // 画像選択後はクリック不可にする
        iconPreview.classList.remove('clickable-preview');
        iconPreview.onclick = null;
      }
      
      // 新しい画像が選択されたら、iconResetフラグを削除
      document.getElementById('iconReset').value = 'false';
    };
    reader.readAsDataURL(file);
  }
}

// アイコンリセット機能
function resetIcon() {
  const iconPreview = document.getElementById('icon-preview');
  const fileInput = document.getElementById('icon-file-input');
  
  if (iconPreview) {
    // プレビューを完全にクリア
    iconPreview.innerHTML = `
      <div class="no-image">
        <i class="material-icons">image</i>
        <span>画像が選択されていません</span>
      </div>
    `;
    // クリック可能にする
    iconPreview.classList.add('clickable-preview');
    iconPreview.onclick = selectIcon;
    
    // すべての×ボタンを確実に削除
    const removeButtons = iconPreview.querySelectorAll('.remove-icon-btn');
    removeButtons.forEach(btn => btn.remove());
  }
  
  if (fileInput) {
    fileInput.value = '';
  }
  
  // アイコンリセットフラグを設定
  document.getElementById('iconReset').value = 'true';
}
</script> 