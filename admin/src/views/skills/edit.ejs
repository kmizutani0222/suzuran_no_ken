  <div class="page-header">
    <h1>スキル編集</h1>
  </div>

  <div class="row">
    <div class="col s12">
      <div class="card">
        <div class="card-content">
          <form action="/skills/<%= skill.id %>" method="post" enctype="multipart/form-data">
            <!-- 1行目: 名前 -->
            <div class="row">
              <div class="input-field col s12">
                <input type="text" id="name" name="name" value="<%= skill.name %>" required />
                <label for="name">名前</label>
              </div>
            </div>

            <!-- 2行目: 左側にCT・コスト・スキルタイプ、右側にアイコン -->
            <div class="row">
              <div class="col s6">
                <div class="row">
                  <div class="input-field col s6">
                    <input type="number" id="ct" name="ct" min="0" value="<%= skill.ct || '' %>" />
                    <label for="ct">CT</label>
                  </div>
                  <div class="input-field col s6">
                    <input type="number" id="cost" name="cost" min="0" value="<%= skill.cost || '' %>" />
                    <label for="cost">コスト</label>
                  </div>
                </div>
                <div class="row">
                  <div class="input-field col s12">
                    <select name="skillType">
                      <option value="">未選択</option>
                      <option value="パッシブ" <%= skill.skillType === 'パッシブ' ? 'selected' : '' %>>パッシブ</option>
                      <option value="アクティブ" <%= skill.skillType === 'アクティブ' ? 'selected' : '' %>>アクティブ</option>
                      <option value="即時" <%= skill.skillType === '即時' ? 'selected' : '' %>>即時</option>
                      <option value="オーラ" <%= skill.skillType === 'オーラ' ? 'selected' : '' %>>オーラ</option>
                      <option value="通常攻撃" <%= skill.skillType === '通常攻撃' ? 'selected' : '' %>>通常攻撃</option>
                      <option value="リアクション" <%= skill.skillType === 'リアクション' ? 'selected' : '' %>>リアクション</option>
                    </select>
                    <label>スキルタイプ（任意）</label>
                  </div>
                </div>
              </div>
              <div class="col s6">
                <div class="image-upload-section">
                  <div class="image-preview-container">
                    <div id="icon-preview" class="image-preview-large">
                      <% if (skill.icon) { %>
                        <img src="<%= skill.icon %>" alt="アイコン" style="max-width: 100%; max-height: 100%; object-fit: contain; border-radius: 4px;" />
                      <% } else { %>
                        <div class="no-image">
                          <i class="material-icons">image</i>
                          <span>画像が選択されていません</span>
                        </div>
                      <% } %>
                    </div>
                  </div>
                  <div class="image-controls">
                    <div class="file-input-wrapper">
                      <input type="file" name="icon" accept="image/*" onchange="imageResizer.handleImageUpload(this, 'icon')" />
                      <label for="icon" class="file-input-label">
                        <i class="material-icons">cloud_upload</i>
                        <span>アイコンを選択</span>
                      </label>
                    </div>
                    <button type="button" class="btn-small waves-effect waves-light grey reset-btn" onclick="resetIcon()">
                      <i class="material-icons">refresh</i>
                      リセット
                    </button>
                  </div>
                </div>
              </div>
            </div>

            <!-- 説明 -->
            <div class="row">
              <div class="input-field col s12">
                <textarea id="description" name="description" class="materialize-textarea"><%= skill.description || '' %></textarea>
                <label for="description">説明（任意）</label>
              </div>
            </div>

            <!-- スキル効果 -->
            <div class="form-section">
              <legend>スキル効果</legend>
              <div class="faction-selection">
                <% skillEffects.forEach(effect => { %>
                  <label class="faction-checkbox">
                    <input type="checkbox" name="effectIds" value="<%= effect.id %>" <%= skill.effectIds && skill.effectIds.includes(effect.id) ? 'checked' : '' %> />
                    <span><%= effect.name %></span>
                  </label>
                <% }); %>
              </div>
            </div>

            <!-- 射程・範囲 -->
            <div class="form-section">
              <legend>射程・範囲</legend>
              
              <!-- スキルターゲット -->
              <div class="faction-selection">
                <label class="faction-checkbox">
                  <input type="checkbox" name="targets" value="近接" <%= skill.targets && skill.targets.includes('近接') ? 'checked' : '' %> />
                  <span>近接</span>
                </label>
                <label class="faction-checkbox">
                  <input type="checkbox" name="targets" value="範囲攻撃" <%= skill.targets && skill.targets.includes('範囲攻撃') ? 'checked' : '' %> />
                  <span>範囲攻撃</span>
                </label>
                <label class="faction-checkbox">
                  <input type="checkbox" name="targets" value="対ユニット" <%= skill.targets && skill.targets.includes('対ユニット') ? 'checked' : '' %> />
                  <span>対ユニット</span>
                </label>
                <label class="faction-checkbox">
                  <input type="checkbox" name="targets" value="対地面" <%= skill.targets && skill.targets.includes('対地面') ? 'checked' : '' %> />
                  <span>対地面</span>
                </label>
              </div>

              <!-- 範囲画像と射程・範囲情報 -->
              <div class="row">
                                <div class="col s6">
                  <div class="image-upload-section">
                    <div class="image-preview-container">
                      <div id="rangeImage-preview" class="image-preview-large">
                        <% if (skill.range && skill.range.image) { %>
                          <img src="<%= skill.range.image %>" alt="範囲画像" style="max-width: 100%; max-height: 100%; object-fit: contain; border-radius: 4px;" />
                        <% } else { %>
                          <div class="no-image">
                            <i class="material-icons">image</i>
                            <span>画像が選択されていません</span>
                          </div>
                        <% } %>
                      </div>
                    </div>
                    <div class="image-controls">
                      <div class="file-input-wrapper">
                        <input type="file" name="rangeImage" accept="image/*" onchange="imageResizer.handleImageUpload(this, 'rangeImage')" />
                        <label for="rangeImage" class="file-input-label">
                          <i class="material-icons">cloud_upload</i>
                          <span>範囲画像を選択</span>
                        </label>
                      </div>
                      <button type="button" class="btn-small waves-effect waves-light grey reset-btn" onclick="resetRangeImage()">
                        <i class="material-icons">refresh</i>
                        リセット
                      </button>
                    </div>
                  </div>
                </div>
                <div class="col s6">
                  <!-- 射程 From-To -->
                  <div class="row">
                    <div class="input-field col s6">
                      <input type="number" id="distanceFrom" name="distanceFrom" min="0" value="<%= skill.range && skill.range.distanceFrom ? skill.range.distanceFrom : '' %>" />
                      <label for="distanceFrom">射程 From</label>
                    </div>
                    <div class="input-field col s6">
                      <input type="number" id="distanceTo" name="distanceTo" min="0" value="<%= skill.range && skill.range.distanceTo ? skill.range.distanceTo : '' %>" />
                      <label for="distanceTo">射程 To</label>
                    </div>
                  </div>
                  
                  <!-- 射程高低差 -->
                  <div class="row">
                    <div class="input-field col s6">
                      <input type="number" id="heightDiffFrom" name="heightDiffFrom" value="<%= skill.range && skill.range.heightDiffFrom ? skill.range.heightDiffFrom : '' %>" />
                      <label for="heightDiffFrom">射程高低差 From</label>
                    </div>
                    <div class="input-field col s6">
                      <input type="number" id="heightDiffTo" name="heightDiffTo" value="<%= skill.range && skill.range.heightDiffTo ? skill.range.heightDiffTo : '' %>" />
                      <label for="heightDiffTo">射程高低差 To</label>
                    </div>
                  </div>
                  
                  <!-- 範囲高低差 -->
                  <div class="row">
                    <div class="input-field col s6">
                      <input type="number" id="areaHeightDiffFrom" name="areaHeightDiffFrom" value="<%= skill.range && skill.range.areaHeightDiffFrom ? skill.range.areaHeightDiffFrom : '' %>" />
                      <label for="areaHeightDiffFrom">範囲高低差 From</label>
                    </div>
                    <div class="input-field col s6">
                      <input type="number" id="areaHeightDiffTo" name="areaHeightDiffTo" value="<%= skill.range && skill.range.areaHeightDiffTo ? skill.range.areaHeightDiffTo : '' %>" />
                      <label for="areaHeightDiffTo">範囲高低差 To</label>
                    </div>
                  </div>
                </div>
              </div>
            </div>

            <!-- 隠しフィールド -->
            <input type="hidden" name="iconClear" id="iconClear" value="false" />
            <input type="hidden" name="rangeImageClear" id="rangeImageClear" value="false" />
            
            <div class="row">
              <div class="col s12 center-align">
                <button type="submit" class="btn-large waves-effect waves-light blue">
                  <i class="material-icons left">update</i>更新
                </button>
              </div>
            </div>
          </form>
        </div>
      </div>
    </div>
  </div>

<!-- 固定配置の戻るボタン -->
<a href="/skills" class="btn-floating fab-back waves-effect waves-light grey">
  <i class="material-icons">arrow_back</i>
</a>

<script>
// アイコンリセット
function resetIcon() {
  document.getElementById('icon-preview').innerHTML = `
    <div class="no-image">
      <i class="material-icons">image</i>
      <span>画像が選択されていません</span>
    </div>
  `;
  document.getElementById('iconClear').value = 'true';
}

// レンジ画像リセット
function resetRangeImage() {
  document.getElementById('rangeImage-preview').innerHTML = `
    <div class="no-image">
      <i class="material-icons">image</i>
      <span>画像が選択されていません</span>
    </div>
  `;
  document.getElementById('rangeImageClear').value = 'true';
  
  // ファイル入力もクリア
  const rangeImageInput = document.querySelector('input[name="rangeImage"]');
  if (rangeImageInput) {
    rangeImageInput.value = '';
  }
}

// フォーム送信前の処理
document.querySelector('form').addEventListener('submit', function(e) {
  // チェックボックスの値を配列として送信するための処理
  const targetCheckboxes = document.querySelectorAll('input[name="targets"]:checked');
  const effectCheckboxes = document.querySelectorAll('input[name="effectIds"]:checked');
  
  // チェックされていないチェックボックスを無効化して送信しないようにする
  document.querySelectorAll('input[name="targets"]:not(:checked)').forEach(cb => {
    cb.disabled = true;
  });
  document.querySelectorAll('input[name="effectIds"]:not(:checked)').forEach(cb => {
    cb.disabled = true;
  });
  
  // 空の配列を送信するための隠しフィールドを追加
  if (targetCheckboxes.length === 0) {
    const hiddenTarget = document.createElement('input');
    hiddenTarget.type = 'hidden';
    hiddenTarget.name = 'targets';
    hiddenTarget.value = '';
    document.querySelector('form').appendChild(hiddenTarget);
  }
  
  if (effectCheckboxes.length === 0) {
    const hiddenEffect = document.createElement('input');
    hiddenEffect.type = 'hidden';
    hiddenEffect.name = 'effectIds';
    hiddenEffect.value = '';
    document.querySelector('form').appendChild(hiddenEffect);
  }
});
</script> 